plugins {
	// Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
	// https://docs.gradle.org/current/userguide/java_gradle_plugin.html
	id 'java-gradle-plugin'

	// Publish plugins to the Gradle Plugin Portal
	// https://plugins.gradle.org/plugin/com.gradle.plugin-publish
	id "com.gradle.plugin-publish" version "0.14.0"

	// Provides the ability to publish build artifacts to an Apache Maven repository
	// https://docs.gradle.org/current/userguide/publishing_maven.html
	id 'maven-publish'

	// https://plugins.gradle.org/plugin/net.ltgt.errorprone
	id 'net.ltgt.errorprone' version '2.0.1'

	// Plugin that keeps your code spotless with Gradle
	// https://plugins.gradle.org/plugin/com.diffplug.spotless
	id "com.diffplug.spotless" version "5.12.1"
}
apply plugin: 'com.diffplug.spotless'
apply from: "https://gist.githubusercontent.com/matshou/${spotlessGistID}/raw/spotless.gradle"

// exclude decompiler code from formatting
spotless.java {
	it.targetExclude '**/org/jetbrains/**/*'
}
apply from: 'test.gradle'

version '0.4.2'
group 'io.pzstorm.capsid'

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'

	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation 'com.google.guava:guava:30.1-jre'

	// https://mvnrepository.com/artifact/org.jetbrains/annotations
	compileOnly 'org.jetbrains:annotations:20.1.0'

	// https://mvnrepository.com/artifact/com.google.errorprone/error_prone_core
	errorprone 'com.google.errorprone:error_prone_core:2.6.0'

	// https://mvnrepository.com/artifact/com.google.errorprone/javac
	errorproneJavac('com.google.errorprone:javac:9+181-r4173-1')
}

gradlePlugin {
	//noinspection GroovyAssignabilityCheck
	plugins {
		capsid {
			id = 'io.pzstorm.capsid'
			implementationClass = 'io.pzstorm.capsid.CapsidPlugin'
		}
	}
	testSourceSets(sourceSets.integrationTest, sourceSets.functionalTest)
}

pluginBundle {
	website = 'https://github.com/pzstorm/capsid'
	vcsUrl = 'https://github.com/pzstorm/capsid'
	description = 'Project Zomboid mod development framework for Gradle'
	tags = ['java', 'project-zomboid', 'modding', 'framework']

	plugins {
		capsid.displayName = 'Storm Capsid'
	}
}

// publish to mavenLocal every time we build project
getTasks().named('classes').configure({
	it.finalizedBy('publishToMavenLocal')
})
// publish to mavenLocal after all classes have been compiled
publishToMavenLocal {
	mustRunAfter('testClasses', 'functionalTestClasses', 'integrationTestClasses')
}

// turn off doclint for Javadoc tasks
// https://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
tasks.withType(Javadoc) {
	options.addStringOption('Xdoclint:none', '-quiet')
}

compileJava {
	options.errorprone {
		// exclude de-compiler code from being checked by error prone
		excludedPaths = '.*/src/main/java/org/jetbrains/.*'
	}
}
// include license files in artifact jar
jar.from 'LICENSE', 'NOTICE'
